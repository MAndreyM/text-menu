#!/bin/bash
set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üèóÔ∏è Building Production Image...${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker
if ! command -v docker &> /dev/null; then
    echo -e "${RED}‚ùå Docker is not installed. Please install Docker first.${NC}"
    exit 1
fi

# –ü–æ–ª—É—á–∞–µ–º –≤–µ—Ä—Å–∏—é –∏–∑ git –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—É—é
VERSION=${1:-latest}
IMAGE_NAME="my-cpp-app"
TAG="$IMAGE_NAME:prod-$VERSION"

echo -e "${YELLOW}üì¶ Building production image with tag: $TAG${NC}"

# –°–±–æ—Ä–∫–∞ production –æ–±—Ä–∞–∑–∞
docker build --target prod -t $TAG .

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ Production image built successfully!${NC}"
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–±—Ä–∞–Ω–Ω–æ–º –æ–±—Ä–∞–∑–µ
    echo -e "\n${YELLOW}üìä Production Image Details:${NC}"
    echo -e "Image: $TAG"
    echo -e "Size: $(docker images $TAG --format "table {{.Size}}" | tail -n 1)"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –æ–±—Ä–∞–∑—ã –ø—Ä–æ–µ–∫—Ç–∞
    echo -e "\n${YELLOW}üìã All project images:${NC}"
    docker images | grep $IMAGE_NAME
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
    echo -e "\n${YELLOW}üöÄ To run the production container:${NC}"
    echo -e "docker run -d --name text-menu-prod $TAG"
    echo -e "docker run -it --rm $TAG /bin/sh"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∏–Ω–∞—Ä–Ω–∏–∫–∞
    echo -e "\n${YELLOW}üîç Verifying binary...${NC}"
    docker run --rm --entrypoint /bin/ls $TAG /app
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
    echo -e "\n${YELLOW}üß™ Testing application startup...${NC}"
    if timeout 5s docker run --rm $TAG 2>/dev/null; then
        echo -e "${GREEN}‚úÖ Application starts successfully${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Application may require specific runtime environment${NC}"
        # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π
        if docker run --rm --entrypoint /bin/sh $TAG -c "test -x /app/text-menu && echo 'Binary exists and is executable'"; then
            echo -e "${GREEN}‚úÖ Binary verification passed${NC}"
        else
            echo -e "${RED}‚ùå Binary verification failed${NC}"
        fi
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ–≥–∞ latest –µ—Å–ª–∏ —ç—Ç–æ —Ä–µ–ª–∏–∑
    if [ "$VERSION" != "latest" ]; then
        echo -e "\n${YELLOW}üè∑Ô∏è  Tagging as latest...${NC}"
        docker tag $TAG $IMAGE_NAME:prod-latest
        echo -e "${GREEN}‚úÖ Tagged as $IMAGE_NAME:prod-latest${NC}"
    fi
    
    echo -e "\n${GREEN}üéâ Production build completed!${NC}"
    
else
    echo -e "${RED}‚ùå Failed to build production image${NC}"
    exit 1
fi
